#!/bin/sh
[ -z "$DOCUMENT_ROOT" ] && export DOCUMENT_ROOT=`main.sbin where_DOCUMENT_ROOT`
enable="1"
update_cycle="1"
update_url="https://github.com/ishihara-nippon/dns-fix-updates/raw/master/domainlist.txt"
update()
{
export download_json='{
"file_name":"domainlist.txt",
"downloader":"curl wget",
"save_dest":"'$DOCUMENT_ROOT/apps/dns-fix/domainlist.txt'",
"useragent":"Mozilla/4.0 (compatible; MSIE 6.1; Windows XP)",
"timeout":20,
"md5sum":"indefinite",
	"download_urls":{
	"github.com":"'$update_url'"
	}
}'
main.sbin download
}
analyse()
{
eval `grep "^bind_port=" $DOCUMENT_ROOT/apps/dnscrypt-proxy/S400dnscryptc.init`
str=`cat $DOCUMENT_ROOT/apps/dns-fix/domainlist.txt | openssl enc -base64 -d`
[ -z "$str" ] && return 1
str=`echo "$str" | sed '/!--.*--Other-/,$d' | sed '1,/!--.*--AA-/d' | grep -vE "^!|/|\||\*" | grep -v '[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}'`
str=`echo "$str" | grep "\." | sed 's/^www\.//g'`
str=`echo "$str" | sed '/^$/d' | sed 's/^/\./g' | sed 's/^[\.][\.]*/\./g' | sort -n | uniq`
[ -d /tmp/dnsmasq.d/ ] || mkdir /tmp/dnsmasq.d/
echo "$str" | sed 's/^/server=\//g' | sed "s/$/\/127.0.0.1\#$bind_port/g" > /tmp/dnsmasq.d/dns-fix.conf
}

start()
{
stop
[ $enable -ne 1 ] && return
if
[ -f $DOCUMENT_ROOT/apps/dns-fix/domainlist.txt ]
then
analyse
if
ps aux | grep "dnsmasq.init"
then
sleep 2
start
return
else
$DOCUMENT_ROOT/apps/dnsmasq/S390dnsmasq.init
fi
else
update
analyse
$DOCUMENT_ROOT/apps/dnsmasq/S390dnsmasq.init
fi
}
stop()
{
rm -f /tmp/dnsmasq.d/dns-fix.conf
$DOCUMENT_ROOT/apps/dnsmasq/S390dnsmasq.init
}
[ -z "$1" ] && start || $1
